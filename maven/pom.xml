<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2016 - 2020 Red Hat, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.hibernate.tool</groupId>
    <artifactId>hibernate-tools-parent</artifactId>
    <version>6.6.31-SNAPSHOT</version>
  </parent>

  <artifactId>hibernate-tools-maven</artifactId>
  <packaging>maven-plugin</packaging>

  <name>Hibernate Tools Maven Plugin</name>
  <description>Maven plugin to provide hibernate-tools reverse engineering and code/schema generation abilities.</description>

  <properties>
    <!-- This is a publicly distributed module that should be published: -->
    <deploy.skip>false</deploy.skip>
    <maven.install.skip>false</maven.install.skip>
    <!-- To run the integration tests we need to set ${hibernate.version} -->
    <hibernate.version>${project.version}</hibernate.version>
  </properties>

  <dependencies>
    <!-- Own dependencies -->
    <dependency>
      <groupId>org.hibernate.tool</groupId>
      <artifactId>hibernate-tools-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Maven Plugins -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-embedder</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-transport-http</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-connector-basic</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven-project-info-reports-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
          <configuration>
            <skipDeploy>true</skipDeploy>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-plugin-plugin</artifactId>
        <executions>
          <execution>
            <id>default-descriptor</id>
            <phase>process-classes</phase>
            <configuration>
              <goalPrefix>hibernate-tools</goalPrefix>
            </configuration>
          </execution>
          <execution>
            <id>help-goal</id>
            <goals>
              <goal>helpmojo</goal>
            </goals>
            <configuration>
              <goalPrefix>hibernate-tools</goalPrefix>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>${github-site-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>site-deploy</phase>
            <configuration>
              <server>github</server>
              <message>Creating site for ${project.version}</message>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- The Invoker plugin will populate the local Maven repository with the artefacts
           needed to run the integration tests with the FailSafe plugin -->
      <plugin>
        <artifactId>maven-invoker-plugin</artifactId>
        <version>${maven-invoker-plugin.version}</version>
        <configuration>
          <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>install</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- add the integration test source folder -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/functionalTest/java</source>
              </sources>
            </configuration>
          </execution>
          <!-- add the examples as test resources -->
          <execution>
            <id>add-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>docs/examples</directory>
                  <excludes>
                    <!-- we will not use the Sakila database for the purpose of the integration test -->
                    <exclude>**/hibernate.properties</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- filter the pom.xml files of the examples to replace the
           h2 and hibernate versions for the integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-test-resources</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.testOutputDirectory}</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/pom.xml</include>
                  </includes>
                </resource>
              </resources>
              <delimiters>
                <delimiter>${*.version}</delimiter>
              </delimiters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Run the integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-plugin-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

</project>
