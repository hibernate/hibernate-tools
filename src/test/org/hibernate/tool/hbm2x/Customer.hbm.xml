<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<!-- 
	
	This mapping demonstrates how to map a collection
	<key> to one of the primary key columns of an
	associated child class with a composite key. This
	is very useful for legacy data!
	
-->

<hibernate-mapping package="org.hibernate.tool.hbm2x">

	<class name="Customer">
		<comment>A unique customer comment!</comment>
		<!--<id name="customerId"
			length="10" type="string">
			<generator class="assigned"/>
			</id>-->

		<composite-id>
			<key-property name="id" type="long" />
		</composite-id>

		<property name="name" type="string" not-null="true"
			length="100" />
		<property name="address" type="string" not-null="true"
			length="200" />

        <property name="customDate" type="org.hibernate.tool.hbm2x.DummyDateType" not-null="true" length="200"/>
        
        <property name="acl" type="byte[]">
         <meta attribute="use-in-equals">true</meta>
        </property>
        
		<component name="addressComponent" class="Address">
			<property name="streetAddress1" type="string"
				column="StreetAddress1" not-null="true">
				<meta attribute="use-in-equals">true</meta>
			</property>
			<property name="streetAddress2" type="string"
				column="StreetAddress2" />
			<property name="city" type="short" column="City"
				not-null="true">
				<meta attribute="use-in-tostring">true</meta>
				<meta attribute="use-in-equals">true</meta>
				<meta attribute="property-type">short</meta>
			</property>
			<property name="postcode" type="string" column="postcode"
				not-null="true" />
			<!--    <many-to-one name="state" class="au.com.groupware.model.State" column="StateId" 
				foreign-key="FK_Address_State" not-null="true" />  -->
			<property name="verified" type="boolean">
			   <meta attribute="use-in-equals">true</meta>
			</property>
		</component>

		<list name="orders" inverse="true" cascade="save-update">
			<key column="customerId" not-null="true" />
			<index column="orderNumber" />
			<one-to-many class="Order" />
		</list>

		<!--  cfg2hbm does not support composite-element
			<set name="addressComposites">
			<key column="ADRID"/>
			<composite-element class="Address">
			<property name="streetAddress1" type="string" column="StreetAddress1" not-null="true" /> 
			<property name="streetAddress2" type="string" column="StreetAddress2" /> 
			<property name="city" type="string" column="City" not-null="true" /> 
			<property name="postcode" type="string" column="postcode" not-null="true" /> 
			</composite-element>
			</set>
       -->

		<component name="test" class="FatherComponent">
		    <parent name="testParent"/>
			<property name="testattrib" type="string" />
			<component name="child" class="ChildComponent">
				<property name="childattrib" type="string" />
			</component>
		</component>

		<!-- hbm2hbmxml does not support dynamic-component
		<dynamic-component name="dynaMap">
			<property name="key1" type="string" />
		</dynamic-component>
		 -->
		 
		<array name="products" cascade="all">
			<key column="profileId" />
			<list-index column="sortOrder" />
			<many-to-many class="Product" />
		</array> 
		
	<!-- hbm2java can't generate a innerclass (Test$Entry) correctly. should probably skip it as a fallback.-->
    <!-- <component name="mapEntry" class="java.util.Map$Entry">
			<property name="value" type="string"/>
			<property name="key" type="string"/>
		 </component>  -->
	</class>


</hibernate-mapping>
