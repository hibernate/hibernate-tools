/*
 * This source file was generated by the Gradle 'init' task
 */
package org.hibernate.tool.gradle;

import static org.junit.jupiter.api.Assertions.assertTrue;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;

import org.gradle.testkit.runner.BuildResult;
import org.gradle.testkit.runner.GradleRunner;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;

class RunSqlFunctionalTest {

	@TempDir
    File projectDir;

    private File getBuildFile() {
        return new File(projectDir, "build.gradle");
    }

    private File getSettingsFile() {
        return new File(projectDir, "settings.gradle");
    }
    
    private File getHibernatePropertiesFile() {
    	File resourcesDir = new File(projectDir, "src/main/resources");
    	resourcesDir.mkdirs();
    	return new File(resourcesDir, "hibernate.properties");
    }
    
    @Test 
    void testRunSqlTask() throws IOException {
        writeString(getSettingsFile(), "");
        writeString(getBuildFile(),BUILD_FILE_CONTENTS);
        writeString(getHibernatePropertiesFile(), HIBERNATE_PROPERTIES_CONTENTS.replace("${projectDir}", projectDir.getAbsolutePath()));

        // Run the build
        GradleRunner runner = GradleRunner.create();
        runner.forwardOutput();
        runner.withPluginClasspath();
        runner.withArguments("runSql");
        runner.withProjectDir(projectDir);
        BuildResult result = runner.build();

        // Verify the result
        assertTrue(result.getOutput().contains("Running SQL: create table foo (id int not null primary key, baz varchar(256))"));
        assertTrue(new File(projectDir, "database/bardb.mv.db").exists());
    }

    private void writeString(File file, String string) throws IOException {
        try (Writer writer = new FileWriter(file)) {
            writer.write(string);
        }
    }
    
    private static final String BUILD_FILE_CONTENTS = 
            "plugins {\n" +
            "  id('application')\n" +
            "  id('org.hibernate.tool.hibernate-tools-gradle')\n" +
            "}\n" +
            "repositories {\n" +
            "  mavenCentral()\n" +
            "}\n" +
            "dependencies {\n" +
            "  implementation('com.h2database:h2:2.1.214')\n" +
            "}\n" +
            "hibernateTools {\n" +
            "  sql = 'create table foo (id int not null primary key, baz varchar(256))'\n" +
            "}\n";
    
    private static final String HIBERNATE_PROPERTIES_CONTENTS = 
    		"hibernate.connection.driver_class=org.h2.Driver\n" +
    	    "hibernate.connection.url=jdbc:h2:${projectDir}/database/bardb\n" +
    	    "hibernate.connection.username=sa\n" +
    	    "hibernate.connection.password=\n" 
    ;
    
 }