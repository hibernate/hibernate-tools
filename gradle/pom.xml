<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2024 - 2025 Red Hat, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.hibernate.tool</groupId>
      <artifactId>hibernate-tools-parent</artifactId>
      <version>7.1.4.Final</version>
   </parent>

   <artifactId>hibernate-tools-gradle</artifactId>
   <packaging>pom</packaging>

   <name>Hibernate Tools Gradle Plugin</name>
   <description>Gradle plugin to provide hibernate-tools reverse engineering and code/schema generation abilities.</description>
   <url>https://hibernate.org/tools/</url>

   <issueManagement>
      <system>JIRA</system>
      <url>https://hibernate.atlassian.net/projects/HBX</url>
   </issueManagement>

   <properties>
       <!-- This is a publicly distributed module that should be published: -->
       <deploy.skip>false</deploy.skip>

       <gradle.executable>./gradlew</gradle.executable>
   </properties>

   <build>
      <plugins>
          <plugin>
              <artifactId>maven-resources-plugin</artifactId>
              <executions>
                  <execution>
                      <id>validate-copy-libs-versions-toml</id>
                      <phase>validate</phase>
                      <goals>
                          <goal>copy-resources</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>gradle</outputDirectory>
                          <resources>
                              <resource>
                                  <directory>resources</directory>
                                  <filtering>true</filtering>
                                  <includes>
                                      <include>libs.versions.toml</include>
                                  </includes>
                              </resource>
                          </resources>
                      </configuration>
                  </execution>
                  <execution>
                      <id>pre-clean-copy-libs-versions-toml</id>
                      <phase>pre-clean</phase>
                      <goals>
                          <goal>copy-resources</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>gradle</outputDirectory>
                          <resources>
                              <resource>
                                  <directory>resources</directory>
                                  <filtering>true</filtering>
                                  <includes>
                                      <include>libs.versions.toml</include>
                                  </includes>
                              </resource>
                          </resources>
                      </configuration>
                  </execution>
                  <execution>
                      <id>validate-copy-gradle-wrapper-jar</id>
                      <phase>validate</phase>
                      <goals>
                          <goal>copy-resources</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>gradle/wrapper</outputDirectory>
                          <resources>
                              <resource>
                                  <directory>resources</directory>
                                  <includes>
                                      <include>gradle-wrapper.jar</include>
                                  </includes>
                              </resource>
                          </resources>
                      </configuration>
                  </execution>
                  <execution>
                      <id>pre-clean-copy-gradle-wrapper-jar</id>
                      <phase>pre-clean</phase>
                      <goals>
                          <goal>copy-resources</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>gradle/wrapper</outputDirectory>
                          <resources>
                              <resource>
                                  <directory>resources</directory>
                                  <includes>
                                      <include>gradle-wrapper.jar</include>
                                  </includes>
                              </resource>
                          </resources>
                      </configuration>
                  </execution>
                  <execution>
                      <id>validate-copy-gradle-wrapper-properties</id>
                      <phase>validate</phase>
                      <goals>
                          <goal>copy-resources</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>gradle/wrapper</outputDirectory>
                          <resources>
                              <resource>
                                  <directory>resources</directory>
                                  <filtering>true</filtering>
                                  <includes>
                                      <include>gradle-wrapper.properties</include>
                                  </includes>
                              </resource>
                          </resources>
                      </configuration>
                  </execution>
                  <execution>
                      <id>pre-clean-copy-gradle-wrapper-properties</id>
                      <phase>pre-clean</phase>
                      <goals>
                          <goal>copy-resources</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>gradle/wrapper</outputDirectory>
                          <resources>
                              <resource>
                                  <directory>resources</directory>
                                  <filtering>true</filtering>
                                  <includes>
                                      <include>gradle-wrapper.properties</include>
                                  </includes>
                              </resource>
                          </resources>
                      </configuration>
                  </execution>
              </executions>
          </plugin>

          <!-- Maven deploy is skipped on purpose as Gradle build will stage the artifact itself. -->
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-deploy-plugin</artifactId>
              <configuration>
                  <skip>true</skip>
              </configuration>
          </plugin>
        <!-- execute Gradle command -->
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
			<artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>gradle-package</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <executable>${gradle.executable}</executable>
                            <arguments>
                                <argument>clean</argument>
                                <argument>build</argument>
                                <argument>-PprojectVersion=${project.version}</argument>
                                <argument>-Ph2Version=${h2.version}</argument>
                                <argument>-Dmaven.repo.local=${settings.localRepository}</argument>
                                <argument>-PmavenRootDirectory=${rootProject.directory}</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>gradle-clean</id>
                        <phase>clean</phase>
                        <configuration>
                            <executable>${gradle.executable}</executable>
                            <arguments>
                                <argument>clean</argument>
                                <argument>-PprojectVersion=${project.version}</argument>
                                <argument>-Ph2Version=${h2.version}</argument>
                            </arguments>
                        </configuration>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
		 </plugin>
          <plugin>
              <artifactId>maven-clean-plugin</artifactId>
              <executions>
                  <execution>
                      <id>delete-gradle-wrapper</id>
                      <phase>clean</phase>
                      <goals>
                          <goal>clean</goal>
                      </goals>
                      <configuration>
                          <filesets>
                              <fileset>
                                  <directory>gradle</directory>
                              </fileset>
                          </filesets>
                      </configuration>
                  </execution>
              </executions>
          </plugin>
      </plugins>
   </build>

    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>gradle-publish-to-plugin-portal</id>
                                <phase>deploy</phase>
                                <configuration>
                                    <executable>${gradle.executable}</executable>
                                    <arguments>
                                        <argument>publishPlugins</argument>
                                        <argument>publishPluginMavenPublicationToStagingRepository</argument>
                                        <argument>-PprojectVersion=${project.version}</argument>
                                        <argument>-Ph2Version=${h2.version}</argument>
                                        <argument>-Dmaven.repo.local=${settings.localRepository}</argument>
                                        <argument>-PmavenRootDirectory=${rootProject.directory}</argument>
                                        <argument>-PmavenStagingDirectory=${local.staging.releases.repo.url}</argument>
                                    </arguments>
                                </configuration>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
