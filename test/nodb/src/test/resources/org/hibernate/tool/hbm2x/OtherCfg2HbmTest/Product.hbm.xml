<?xml version="1.0"?>
<!--
  ~ Copyright 2004 - 2025 Red Hat, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE hibernate-mapping PUBLIC 
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"https://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.hibernate.tool.hbm2x">

    <class name="Product">
    	<synchronize table="LineItem"/>
    
    	<id name="productId"
    		length="10"
    		type="long">
    		<generator class="assigned"/>
    	</id>

		<version name="version" type="long"/>    	
		
<!-- hbm2hbmxml does not support any 
   	<any name="relatedObject" id-type="long">
            <column name="objectClass"/>
            <column name="objectID"/>
        </any> -->
    	
    	<property name="description" 
    		not-null="true" 
    		length="200"
    		type="string"/>
    	<property name="price" length="3" type="big_decimal"/>
    	<property name="numberAvailable" not-null="true" type="int"/>
    	<property name="minStock" type="long"/>
    	<property name="otherStock" not-null="true" type="long">
    	  <meta attribute="property-type">java.lang.Integer</meta>
    	</property>
    	
    	<property name="numberOrdered" type="int" 
    		formula="( select sum(li.quantity) from LineItem li where li.productId = productId )"/>
    		
    	<primitive-array name="lapseRates" table="lapseRates">
			<key column="lapseRateId"/>
			<index column="indexId"/>
			<element type="double" column="lapseRate"/>
	 	</primitive-array>
      
   </class>
</hibernate-mapping>
