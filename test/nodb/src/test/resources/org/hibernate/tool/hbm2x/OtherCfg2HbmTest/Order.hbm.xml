<?xml version="1.0"?>
<!--
  ~ Hibernate Tools, Tooling for your Hibernate Projects
  ~
  ~ Copyright 2017-2020 Red Hat, Inc.
  ~
  ~ Licensed under the GNU Lesser General Public License (LGPL), 
  ~ version 2.1 or later (the "License").
  ~ You may not use this file except in compliance with the License.
  ~ You may read the licence in the 'lgpl.txt' file in the root folder of 
  ~ project or obtain a copy at
  ~
  ~     http://www.gnu.org/licenses/lgpl-2.1.html
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE hibernate-mapping PUBLIC 
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"https://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.hibernate.tool.hbm2x">
<!-- 

     
-->

    <class name="Order" table="CustomerOrder" lazy="true">
    	<meta attribute="class-modifier">public strictfp</meta>
    	<meta attribute="class-code">// extra code line 1</meta>
    	<meta attribute="class-code">// extra code line 2</meta>
    	<meta attribute="extra-import" inherit="false">java.text.Collator</meta>
    	<meta attribute="class-code" inherit="false">{ Collator.getInstance(); }</meta>
    	<synchronize table="LineItem"/>
    	<synchronize table="Product"/>
    	
    	<composite-id name="id" 
    		class="OrderId">
    		<key-property name="customerId" length="10" type="string"/>
    		<key-property name="orderNumber" type="int"/>
    	</composite-id>
    	
    	<property name="orderDate" 
    		type="calendar_date"
    		not-null="true"/>
    	
    	<property name="total" type="big_decimal"
    		formula="( select sum(li.quantity*p.price) from LineItem li, Product p where li.productId = p.productId and li.customerId = customerId and li.orderNumber = orderNumber )"/>
    	
    	<many-to-one name="customer"
    		column="customerId"
    		insert="false"
			update="false" 
			not-null="true" class="Customer"/>
			
    	<bag name="lineItems"
    		fetch="join" 
    		inverse="true"
    		cascade="save-update">
    		<key>
    			<column name="customerId"/>
    			<column name="orderNumber"/>
    		</key>
    		<one-to-many class="LineItem"/>
    	</bag>
    	
    	
    </class>
 	
</hibernate-mapping>
