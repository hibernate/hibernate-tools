<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2010 - 2023 Red Hat, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" basis,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-parent</artifactId>
        <version>49</version>
    </parent>

    <groupId>org.hibernate.tool</groupId>
    <artifactId>hibernate-tools-parent</artifactId>
    <version>6.6.28-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>Hibernate Tools Parent Project</name>

	<url>http://hibernate.org/tools/</url>

	<issueManagement>
		<system>JIRA</system>
		<url>http://hibernate.atlassian.net/projects/HBX</url>
	</issueManagement>

	<scm>
	  <connection>scm:git:git://github.com/hibernate/hibernate-tools.git</connection>
	  <developerConnection>scm:git:git@github.com:hibernate/hibernate-tools.git</developerConnection>
	  <url>http://github.com/hibernate/hibernate-tools</url>
	</scm>

	<organization>
		<name>Hibernate</name>
		<url>http://www.hibernate.org</url>
	</organization>

	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>maxandersen</id>
			<name>Max Andersen</name>
			<email>max@hibernate.org</email>
			<url>http://in.relation.to/Bloggers/Max</url>
		</developer>
		<developer>
			<id>koentsje</id>
			<name>Koen Aers</name>
			<email>koen@hibernate.org</email>
			<url>http://koentsje.blogspot.be</url>
		</developer>
	</developers>

    <modules>
        <module>orm</module>
        <module>jbt</module>
        <module>maven</module>
        <module>gradle</module>
        <module>ant</module>
        <module>test</module>
        <module>utils</module>
    </modules>

    <properties>

        <ant.version>1.10.15</ant.version>
        <antlr.version>4.13.2</antlr.version>
        <commons-collections.version>4.5.0</commons-collections.version>
        <freemarker.version>2.3.34</freemarker.version>
        <!-- version 1.24.0 of google-java-format is the last one compatible with java 11 -->
        <google-java-format.version>1.24.0</google-java-format.version>
        <h2.version>2.3.232</h2.version>
        <hibernate-commons-annotations.version>7.0.3.Final</hibernate-commons-annotations.version>
        <hibernate-orm.version>6.6.28.Final</hibernate-orm.version>
        <hsqldb.version>2.6.1</hsqldb.version>
        <javaee-api.version>8.0.1</javaee-api.version>
        <jboss-logging.version>3.6.1.Final</jboss-logging.version>
        <junit-jupiter.version>5.13.4</junit-jupiter.version>
        <mysql.version>8.0.22</mysql.version>
        <oracle.version>19.3.0.0</oracle.version>
        <sqlserver.version>9.2.1.jre8</sqlserver.version>

        <!-- Plugins not managed by the JBoss parent POM: -->
        <maven-wrapper-plugin.version>3.3.3</maven-wrapper-plugin.version>
        <flatten-maven-plugin.version>1.7.2</flatten-maven-plugin.version>
        <maven-invoker-plugin.version>3.9.1</maven-invoker-plugin.version>

        <!--
            We don't want to publish or sign any modules by default.
            Specific modules will override the setting at their own level.
        -->
        <deploy.skip>true</deploy.skip>

        <!-- Repository Deployment URLs -->

        <!-- We always publish to a local directory, JReleaser is supposed to take care of publishing to Nexus: -->
        <local.staging.releases.repo.id>staging-deploy</local.staging.releases.repo.id>
        <local.staging.releases.repo.name>Local Staging Directory Releases Repository</local.staging.releases.repo.name>
        <local.staging.releases.repo.url>file:${maven.multiModuleProjectDirectory}/target/staging-deploy/maven</local.staging.releases.repo.url>
        <central.releases.repo.id>central-releases</central.releases.repo.id>
        <central.releases.repo.name>Maven Central Releases Repository</central.releases.repo.name>
        <central.releases.repo.url>https://central.sonatype.com/api/v1/publisher/</central.releases.repo.url>
        <central.snapshots.repo.id>central-snapshots</central.snapshots.repo.id>
        <central.snapshots.repo.name>Maven Central Snapshots Repository</central.snapshots.repo.name>
        <central.snapshots.repo.url>https://central.sonatype.com/repository/maven-snapshots/</central.snapshots.repo.url>


        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.min.version>3.9.7</maven.min.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.googlejavaformat</groupId>
                <artifactId>google-java-format</artifactId>
                <version>${google-java-format.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>test</scope>
            </dependency>
			<dependency>
    			<groupId>com.microsoft.sqlserver</groupId>
    		    <artifactId>mssql-jdbc</artifactId>
    			<version>${sqlserver.version}</version>
    			<scope>test</scope>
			</dependency>
			<dependency>
    			<groupId>com.oracle.ojdbc</groupId>
    			<artifactId>ojdbc8</artifactId>
    			<version>${oracle.version}</version>
    			<scope>test</scope>
			</dependency>
 		    <dependency>
   			    <groupId>javax</groupId>
   			    <artifactId>javaee-api</artifactId>
   			    <version>${javaee-api.version}</version>
   			    <scope>test</scope>
   		    </dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
				<scope>test</scope>
			</dependency>
  		    <dependency>
			    <groupId>org.antlr</groupId>
			    <artifactId>antlr4-runtime</artifactId>
			    <version>${antlr.version}</version>
		    </dependency>
  		    <dependency>
			    <groupId>org.apache.ant</groupId>
			    <artifactId>ant</artifactId>
			    <version>${ant.version}</version>
		    </dependency>
	        <dependency>
		        <groupId>org.apache.commons</groupId>
		        <artifactId>commons-collections4</artifactId>
		        <version>${commons-collections.version}</version>
	        </dependency>
		    <dependency>
			    <groupId>org.freemarker</groupId>
			    <artifactId>freemarker</artifactId>
			    <version>${freemarker.version}</version>
		    </dependency>
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate-orm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.orm</groupId>
                <artifactId>hibernate-ant</artifactId>
                <version>${hibernate-orm.version}</version>
            </dependency>
  		    <dependency>
			    <groupId>org.hibernate.common</groupId>
			    <artifactId>hibernate-commons-annotations</artifactId>
			    <version>${hibernate-commons-annotations.version}</version>
		    </dependency>
        	<dependency>
        		<groupId>org.hibernate.tool</groupId>
        		<artifactId>hibernate-tools-ant</artifactId>
        		<version>${project.version}</version>
        	</dependency>
        	<dependency>
        		<groupId>org.hibernate.tool</groupId>
        		<artifactId>hibernate-tools-orm</artifactId>
        		<version>${project.version}</version>
        	</dependency>
            <dependency>
        		<groupId>org.hibernate.tool</groupId>
        		<artifactId>hibernate-tools-tests-common</artifactId>
        		<version>${project.version}</version>
            </dependency>
            <dependency>
        	    <groupId>org.hibernate.tool</groupId>
        		<artifactId>hibernate-tools-tests-utils</artifactId>
        		<version>${project.version}</version>
        	</dependency>
        	<dependency>
        		<groupId>org.hibernate.tool</groupId>
        		<artifactId>hibernate-tools-utils</artifactId>
        		<version>${project.version}</version>
        	</dependency>
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
            	<groupId>org.jboss.logging</groupId>
            	<artifactId>jboss-logging</artifactId>
            	<version>${jboss-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
         </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <repository>
            <id>${central.releases.repo.id}</id>
            <name>${central.releases.repo.name}</name>
            <url>${central.releases.repo.url}</url>
        </repository>
        <snapshotRepository>
            <id>${central.snapshots.repo.id}</id>
            <name>${central.snapshots.repo.name}</name>
            <url>${central.snapshots.repo.url}</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-wrapper-plugin</artifactId>
                    <version>${maven-wrapper-plugin.version}</version>
                    <configuration>
                        <mavenVersion>${maven.min.version}</mavenVersion>
                        <distributionType>bin</distributionType>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten-maven-plugin.version}</version>
                    <configuration>
                        <outputDirectory>${project.build.directory}</outputDirectory>
                        <!-- Keep things like url, inceptionYear, authors...
                             everything that's required by the OSSRH Maven repository -->
                        <flattenMode>ossrh</flattenMode>
                        <!-- To make sure that `hibernate-tools-gradle` module that has a pom packaging will also publish the flattened pom -->
                        <updatePomFile>true</updatePomFile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten-pom</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Skip the deploy plugin explicitly: we use nexus-staging-maven-plugin instead -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>${deploy.skip}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-java-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <!--
                                We want to override the rules for this configuration to remove the bannedRepositories rule from the JBoss parent.
                            -->
                            <rules combine.self="override">
                                <requireJavaVersion>
                                    <message>To build this project JDK ${jdk.min.version} (or greater) is required. Please install it.</message>
                                    <version>${jdk.min.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <configuration>
                                <altReleaseDeploymentRepository>${local.staging.releases.repo.id}::${local.staging.releases.repo.url}</altReleaseDeploymentRepository>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
